{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/urja/frontier-techworks-test/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, ProgressBar } from 'react-bootstrap';\nimport './App.css';\nimport questions from './questions.json';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = props => {\n  _s();\n\n  const [currentQuestion, setCurrentQuestion] = useState(1);\n  const [noOfCorrectResponses, setNoOfCorrectResponses] = useState(0);\n  const response = 0;\n\n  function updateQuestion() {\n    if (currentQuestion != 20) {\n      setCurrentQuestion(currentQuestion + 1);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n      animated: true,\n      now: printProgress(currentQuestion, props.noOfQuestions)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Quiz\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Number\",\n          children: [\"Question \", currentQuestion, \" of \", props.noOfQuestions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: questions[currentQuestion - 1].category,\n          className: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Difficulty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: questions[currentQuestion - 1].question,\n        className: \"Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Answer\",\n        children: [printAnswer(), \";\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: updateQuestion,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Score-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Score\",\n        children: [\"Score: \", printScore(noOfCorrectResponses, currentQuestion), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Max-score\",\n        children: [\"] Max Score: \", printMaxScore(noOfCorrectResponses, currentQuestion, props.noOfQuestions), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Bar\",\n        children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n          striped: true,\n          variant: \"success\",\n          now: printMinScore(noOfCorrectResponses, currentQuestion, props.noOfQuestions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          striped: true,\n          variant: \"warning\",\n          now: printScore(noOfCorrectResponses, currentQuestion)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          striped: true,\n          variant: \"danger\",\n          now: printMaxScore(noOfCorrectResponses, currentQuestion, props.noOfQuestions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          striped: true,\n          variant: \"info\",\n          now: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"7wwZ9N1dHHgl+9fYRX5/1I1Qka4=\");\n\n_c = App;\nexport default App;\n\nfunction printProgress(currentQuestion, noOfQuestions) {\n  return currentQuestion / noOfQuestions * 100;\n}\n\nfunction printScore(noOfCorrectResponses, currentQuestion) {\n  return noOfCorrectResponses / currentQuestion * 100;\n}\n\nfunction printMaxScore(noOfCorrectResponses, currentQuestion, noOfQuestions) {\n  return (noOfCorrectResponses + (noOfQuestions - currentQuestion)) / noOfQuestions * 100;\n}\n\nfunction printMinScore(noOfCorrectResponses, currentQuestion, noOfQuestions) {\n  return noOfCorrectResponses / noOfQuestions * 100;\n}\n\nfunction printAnswer() {\n  return 'Correct!';\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/urja/frontier-techworks-test/src/App.tsx"],"names":["React","useState","Button","ProgressBar","questions","App","props","currentQuestion","setCurrentQuestion","noOfCorrectResponses","setNoOfCorrectResponses","response","updateQuestion","printProgress","noOfQuestions","category","question","printAnswer","printScore","printMaxScore","printMinScore"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, ProgressBar } from 'react-bootstrap';\nimport './App.css';\nimport questions from './questions.json';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ninterface AppProps {\n  noOfQuestions : number\n}\n\nconst App : React.FunctionComponent<AppProps> = (props: AppProps) => {\n  const [currentQuestion, setCurrentQuestion] = useState(1);\n  const [noOfCorrectResponses, setNoOfCorrectResponses] = useState(0);\n  const response : number = 0;\n  function updateQuestion() {\n    if(currentQuestion!=20) {\n      setCurrentQuestion(currentQuestion+1);\n    }\n  }\n  return (\n    <div className = 'App'>\n      <ProgressBar animated now = {printProgress(currentQuestion,props.noOfQuestions)} />\n      <div className = 'Quiz'>\n        <div className = 'Header'>\n          <div className = 'Number'>\n            Question {currentQuestion} of {props.noOfQuestions}\n          </div>\n          <div dangerouslySetInnerHTML = {questions[currentQuestion - 1].category} className = 'Category' />\n          <div className = 'Difficulty'>\n          </div>\n        </div>\n        <div dangerouslySetInnerHTML = {questions[currentQuestion - 1].question} className = 'Question' />\n        <div className = 'Response'>\n        </div>\n        <div className = 'Answer'>\n          {printAnswer()};\n        </div>\n        <Button variant = 'primary' onClick = {updateQuestion}>\n          Next\n        </Button>\n      </div>\n      <div className = 'Score-bar'>\n        <div className = 'Score'>\n          Score: {printScore(noOfCorrectResponses,currentQuestion)}%\n        </div>\n        <div className = 'Max-score'>]\n          Max Score: {printMaxScore(noOfCorrectResponses,currentQuestion,props.noOfQuestions)}%\n        </div>\n        <div className = 'Bar'>\n          <ProgressBar striped variant = 'success' now = {printMinScore(noOfCorrectResponses,currentQuestion,props.noOfQuestions)} />\n          <ProgressBar striped variant = 'warning' now = {printScore(noOfCorrectResponses,currentQuestion)} />\n          <ProgressBar striped variant = 'danger' now = {printMaxScore(noOfCorrectResponses,currentQuestion,props.noOfQuestions)} />\n          <ProgressBar striped variant = 'info' now = {100} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n\nfunction printProgress(currentQuestion: number, noOfQuestions: number) {\n  return (currentQuestion/noOfQuestions) * 100;\n}\n\nfunction printScore(noOfCorrectResponses: number, currentQuestion: number) {\n  return (noOfCorrectResponses/currentQuestion) * 100;\n}\n\nfunction printMaxScore(noOfCorrectResponses: number,currentQuestion: number,noOfQuestions: number) {\n  return ((noOfCorrectResponses+(noOfQuestions-currentQuestion))/noOfQuestions) * 100;\n}\n\nfunction printMinScore(noOfCorrectResponses: number,currentQuestion: number,noOfQuestions: number) {\n  return (noOfCorrectResponses/noOfQuestions) * 100;\n}\n\nfunction printAnswer() {\n  return 'Correct!';\n}\n"]},"metadata":{},"sourceType":"module"}