{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/urja/frontier-techworks-test/src/components/Response.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Response = props => {\n  _s();\n\n  const [optionSelected, changeAnswer] = useState(false);\n\n  if (!props.visible) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \" \"\n    }, void 0, false);\n  } else if (props.response) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Correct!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Sorry!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Response, \"M9XhDi6ALU/bKn8bsmfkxVRBnGY=\");\n\n_c = Response;\nexport default Response;\n\nvar _c;\n\n$RefreshReg$(_c, \"Response\");","map":{"version":3,"sources":["/home/urja/frontier-techworks-test/src/components/Response.tsx"],"names":["React","useState","Response","props","optionSelected","changeAnswer","visible","response"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,YAAP;AACA,OAAO,sCAAP;;AAOA,MAAMC,QAAiD,GAAIC,KAAD,IAA0B;AAAA;;AAChF,QAAM,CAACC,cAAD,EAAiBC,YAAjB,IAAiCJ,QAAQ,CAAC,KAAD,CAA/C;;AACA,MAAG,CAACE,KAAK,CAACG,OAAV,EAAmB;AACf,wBACI;AAAA;AAAA,qBADJ;AAGH,GAJD,MAKK,IAAGH,KAAK,CAACI,QAAT,EAAmB;AACpB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GANI,MAOA;AACD,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;AACJ,CArBD;;GAAML,Q;;KAAAA,Q;AAuBN,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport '../App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ninterface ResponseProps {\n    visible: boolean | null,\n    response: boolean | null\n}\n\nconst Response : React.FunctionComponent<ResponseProps> = (props: ResponseProps) => {\n    const [optionSelected, changeAnswer] = useState(false);\n    if(!props.visible) {\n        return (\n            <> </>\n        )\n    }\n    else if(props.response) {\n        return (\n            <div>\n                Correct!\n            </div>\n        )\n    }\n    else {\n        return (\n            <div>\n                Sorry!\n            </div>\n        )\n    }\n}\n\nexport default Response;"]},"metadata":{},"sourceType":"module"}