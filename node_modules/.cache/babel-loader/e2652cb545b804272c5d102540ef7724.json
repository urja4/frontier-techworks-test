{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/urja/frontier-techworks-test/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ProgressBar } from 'react-bootstrap';\nimport './App.css';\nimport questions from './questions.json';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AnswerOption from './components/AnswerOption';\nimport EnterButton from './components/EnterButton';\nimport * as functions from './utility/utilityFunctions';\n\nconst App = props => {\n  _s();\n\n  const [currentQuestion, setCurrentQuestion] = useState(1);\n  const [noOfCorrectResponses, setNoOfCorrectResponses] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n      className: \"Progress-bar\",\n      animated: true,\n      now: functions.printProgress(currentQuestion, props.noOfQuestions)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Quiz\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Number\",\n          children: [\"Question \", currentQuestion, \" of \", props.noOfQuestions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Category\",\n          children: decodeURIComponent(questions[currentQuestion - 1].category)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Difficulty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Question\",\n        children: decodeURIComponent(questions[currentQuestion - 1].question)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Response\",\n        children: /*#__PURE__*/_jsxDEV(AnswerOption, {\n          className: \"Answer-option\",\n          currentQuestion: currentQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EnterButton, {\n        className: \"Enter-button\",\n        currentQuestion: currentQuestion,\n        setCurrentQuestion: setCurrentQuestion,\n        setNoOfCorrectResponses: setNoOfCorrectResponses,\n        score: functions.printScore(noOfCorrectResponses, currentQuestion),\n        noOfQuestions: props.noOfQuestions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Score-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Score\",\n        children: [\"Score: \", functions.printScore(noOfCorrectResponses, currentQuestion), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Max-score\",\n        children: [\"Max Score: \", functions.printMaxScore(noOfCorrectResponses, currentQuestion, props.noOfQuestions), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Bar\",\n        children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n          className: \"Progress\",\n          striped: true,\n          variant: \"success\",\n          now: functions.printMinScore(noOfCorrectResponses, currentQuestion, props.noOfQuestions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          className: \"Progress\",\n          striped: true,\n          variant: \"warning\",\n          now: functions.printScore(noOfCorrectResponses, currentQuestion)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          className: \"Progress\",\n          striped: true,\n          variant: \"danger\",\n          now: functions.printMaxScore(noOfCorrectResponses, currentQuestion, props.noOfQuestions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          className: \"Progress\",\n          striped: true,\n          variant: \"info\",\n          now: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"7wwZ9N1dHHgl+9fYRX5/1I1Qka4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/urja/frontier-techworks-test/src/App.tsx"],"names":["React","useState","ProgressBar","questions","AnswerOption","EnterButton","functions","App","props","currentQuestion","setCurrentQuestion","noOfCorrectResponses","setNoOfCorrectResponses","printProgress","noOfQuestions","decodeURIComponent","category","question","printScore","printMaxScore","printMinScore"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, ProgressBar } from 'react-bootstrap';\nimport './App.css';\nimport questions from './questions.json';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AnswerOption from './components/AnswerOption';\nimport EnterButton from './components/EnterButton';\nimport * as functions from './utility/utilityFunctions';\n\ninterface AppProps {\n  noOfQuestions : number\n}\n\nconst App : React.FunctionComponent<AppProps> = (props: AppProps) => {\n  const [currentQuestion, setCurrentQuestion] = useState(1);\n  const [noOfCorrectResponses, setNoOfCorrectResponses] = useState(0);\n\n  return (\n    <div className = 'App'>\n      <ProgressBar className = 'Progress-bar' animated now = {functions.printProgress(currentQuestion,props.noOfQuestions)} />\n      <div className = 'Quiz'>\n        <div className = 'Header'>\n          <div className = 'Number'>\n            Question {currentQuestion} of {props.noOfQuestions}\n          </div>\n          <div className = 'Category'>\n            {decodeURIComponent(questions[currentQuestion - 1].category)}\n          </div>\n          <div className = 'Difficulty'>\n          </div>\n        </div>\n        <div className = 'Question'>\n          {decodeURIComponent(questions[currentQuestion - 1].question)}\n        </div>\n        <div className = 'Response'>\n          <AnswerOption className = 'Answer-option' currentQuestion = {currentQuestion} />\n        </div>\n        <EnterButton className = 'Enter-button' currentQuestion = {currentQuestion} setCurrentQuestion =  {setCurrentQuestion} setNoOfCorrectResponses = {setNoOfCorrectResponses} score = {functions.printScore(noOfCorrectResponses,currentQuestion)} noOfQuestions = {props.noOfQuestions} />\n      </div>\n      <div className = 'Score-bar'>\n        <div className = 'Score'>\n          Score: {functions.printScore(noOfCorrectResponses,currentQuestion)}%\n        </div>\n        <div className = 'Max-score'>\n          Max Score: {functions.printMaxScore(noOfCorrectResponses,currentQuestion,props.noOfQuestions)}%\n        </div>\n        <div className = 'Bar'>\n          <ProgressBar className = 'Progress' striped variant = 'success' now = {functions.printMinScore(noOfCorrectResponses,currentQuestion,props.noOfQuestions)} />\n          <ProgressBar className = 'Progress' striped variant = 'warning' now = {functions.printScore(noOfCorrectResponses,currentQuestion)} />\n          <ProgressBar className = 'Progress' striped variant = 'danger' now = {functions.printMaxScore(noOfCorrectResponses,currentQuestion,props.noOfQuestions)} />\n          <ProgressBar className = 'Progress' striped variant = 'info' now = {100} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}