{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/urja/frontier-techworks-test/src/components/EnterButton.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport '../App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst EnterButton = props => {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const updateQuestion = () => {\n    props.setCurrentQuestion(props.currentQuestion + 1);\n  };\n\n  const handleRetakeQuiz = () => {\n    props.setCurrentQuestion(1);\n    props.setNoOfCorrectResponses(0);\n    setShow(false);\n  };\n\n  if (props.visible) {\n    if (props.currentQuestion == props.noOfQuestions) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"End-button\",\n          variant: \"primary\",\n          onClick: handleShow,\n          children: \"End Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          className: \"Result-modal\",\n          show: show,\n          onHide: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            className: \"Result-header\",\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              className: \"Result-title\",\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            className: \"Result-body\",\n            children: props.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            className: \"Result-footer\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"Close-button\",\n              variant: \"secondary\",\n              onClick: handleClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"Retake-button\",\n              variant: \"primary\",\n              onClick: handleRetakeQuiz,\n              children: \"Retake\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"Next-button\",\n          variant: \"primary\",\n          onClick: updateQuestion,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \" \"\n    }, void 0, false);\n  }\n};\n\n_s(EnterButton, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = EnterButton;\nexport default EnterButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"EnterButton\");","map":{"version":3,"sources":["/home/urja/frontier-techworks-test/src/components/EnterButton.tsx"],"names":["React","useState","Button","Modal","EnterButton","props","show","setShow","handleClose","handleShow","updateQuestion","setCurrentQuestion","currentQuestion","handleRetakeQuiz","setNoOfCorrectResponses","visible","noOfQuestions","score"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,iBAA9B;AACA,OAAO,YAAP;AACA,OAAO,sCAAP;;AAWA,MAAMC,WAAuD,GAAIC,KAAD,IAA6B;AAAA;;AACzF,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;;AACA,QAAMO,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAME,UAAU,GAAG,MAAMF,OAAO,CAAC,IAAD,CAAhC;;AACA,QAAMG,cAAc,GAAG,MAAM;AACzBL,IAAAA,KAAK,CAACM,kBAAN,CAAyBN,KAAK,CAACO,eAAN,GAAwB,CAAjD;AACH,GAFD;;AAGA,QAAMC,gBAAgB,GAAG,MAAM;AAC3BR,IAAAA,KAAK,CAACM,kBAAN,CAAyB,CAAzB;AACAN,IAAAA,KAAK,CAACS,uBAAN,CAA8B,CAA9B;AACAP,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAJD;;AAKA,MAAGF,KAAK,CAACU,OAAT,EAAkB;AACd,QAAGV,KAAK,CAACO,eAAN,IAAyBP,KAAK,CAACW,aAAlC,EAAiD;AAC7C,0BACI;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAG,YAApB;AAAiC,UAAA,OAAO,EAAC,SAAzC;AAAmD,UAAA,OAAO,EAAEP,UAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,KAAD;AAAO,UAAA,SAAS,EAAG,cAAnB;AAAkC,UAAA,IAAI,EAAEH,IAAxC;AAA8C,UAAA,MAAM,EAAEE,WAAtD;AAAA,kCACI,QAAC,KAAD,CAAO,MAAP;AAAc,YAAA,SAAS,EAAG,eAA1B;AAA0C,YAAA,WAAW,MAArD;AAAA,mCACI,QAAC,KAAD,CAAO,KAAP;AAAa,cAAA,SAAS,EAAG,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,KAAD,CAAO,IAAP;AAAY,YAAA,SAAS,EAAG,aAAxB;AAAA,sBAAuCH,KAAK,CAACY;AAA7C;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI,QAAC,KAAD,CAAO,MAAP;AAAc,YAAA,SAAS,EAAG,eAA1B;AAAA,oCACI,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAG,cAApB;AAAmC,cAAA,OAAO,EAAC,WAA3C;AAAuD,cAAA,OAAO,EAAET,WAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAG,eAApB;AAAoC,cAAA,OAAO,EAAC,SAA5C;AAAsD,cAAA,OAAO,EAAEK,gBAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,sBADJ;AAqBH,KAtBD,MAwBK;AACD,0BACI;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAG,aAApB;AAAkC,UAAA,OAAO,EAAC,SAA1C;AAAoD,UAAA,OAAO,EAAEH,cAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,uBADJ;AAOH;AACJ,GAlCD,MAmCK;AACD,wBACI;AAAA;AAAA,qBADJ;AAGH;AACJ,CApDD;;GAAMN,W;;KAAAA,W;AAsDN,eAAeA,WAAf","sourcesContent":["import React, {useState} from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport '../App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ninterface EnterButtonProps {\n    currentQuestion: number;\n    setCurrentQuestion: (currentQuestion: number) => void;\n    setNoOfCorrectResponses: (noOfCorrectResponses: number) => void;\n    score: number;\n    noOfQuestions: number;\n    visible: boolean;\n}\n\nconst EnterButton : React.FunctionComponent<EnterButtonProps> = (props: EnterButtonProps) => {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const updateQuestion = () => {\n        props.setCurrentQuestion(props.currentQuestion + 1);\n    }\n    const handleRetakeQuiz = () => {\n        props.setCurrentQuestion(1);\n        props.setNoOfCorrectResponses(0);\n        setShow(false);\n    }\n    if(props.visible) {\n        if(props.currentQuestion == props.noOfQuestions) {\n            return (\n                <>\n                    <Button className = 'End-button' variant=\"primary\" onClick={handleShow}>\n                        End Test\n                    </Button>\n                    <Modal className = 'Result-modal' show={show} onHide={handleClose}>\n                        <Modal.Header className = 'Result-header' closeButton>\n                            <Modal.Title className = 'Result-title'>Score</Modal.Title>\n                         </Modal.Header>\n                        <Modal.Body className = 'Result-body'>{props.score}</Modal.Body>\n                        <Modal.Footer className = 'Result-footer'>\n                            <Button className = 'Close-button' variant=\"secondary\" onClick={handleClose}>\n                                Close\n                            </Button>\n                            <Button className = 'Retake-button' variant=\"primary\" onClick={handleRetakeQuiz}>\n                                Retake\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n                </>\n            )\n        }\n    \n        else {\n            return (\n                <>\n                    <Button className = 'Next-button' variant=\"primary\" onClick={updateQuestion}>\n                        Next\n                    </Button>\n                </>\n            )\n        }\n    }\n    else {\n        return (\n            <> </>\n        )\n    }\n}\n\nexport default EnterButton;"]},"metadata":{},"sourceType":"module"}