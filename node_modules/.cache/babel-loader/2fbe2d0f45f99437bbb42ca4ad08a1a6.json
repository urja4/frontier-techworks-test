{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/urja/frontier-techworks-test/src/components/AnswerOption.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Col, Row, Button } from 'react-bootstrap';\nimport questions from '../questions.json';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Response from './Response';\nimport '../App.css';\nimport EnterButton from './EnterButton';\n\nconst AnswerOption = props => {\n  _s();\n\n  const answerType = questions[props.currentQuestion - 1].type;\n  const [answerSelected, answerChosen] = useState(false);\n  const [response, responseCaptured] = useState(false);\n  const [isButtonDisabled, disableButton] = useState(false);\n\n  const checkAnswer = optionChoosen => {\n    console.log(props.options);\n\n    if (!response) {\n      disableButton(true);\n\n      if (optionChoosen === questions[props.currentQuestion - 1].correct_answer) {\n        console.log(\"answer true\");\n        answerChosen(true);\n        props.setNoOfCorrectResponses(props.noOfCorrectResponses + 1);\n      } else {\n        console.log(\"answer false\");\n        answerChosen(false);\n        props.setNoOfWrongResponses(props.noOfWrongResponses + 1);\n      }\n\n      responseCaptured(true);\n    }\n  };\n\n  useEffect(() => {\n    answerChosen(false);\n    responseCaptured(false);\n    disableButton(false);\n  }, [props.currentQuestion]);\n\n  switch (answerType) {\n    case 'multiple':\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Multiple-choice\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            className: \"Option-row\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              className: \"Options\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"OptionButton\",\n                variant: \"primary\",\n                size: \"lg\",\n                active: !isButtonDisabled,\n                disabled: isButtonDisabled,\n                onClick: checkAnswer.bind(this, decodeURIComponent(props.options[0])),\n                children: decodeURIComponent(props.options[0])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              className: \"Options\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"OptionButton\",\n                variant: \"primary\",\n                size: \"lg\",\n                active: !isButtonDisabled,\n                disabled: isButtonDisabled,\n                onClick: checkAnswer.bind(this, decodeURIComponent(props.options[1])),\n                children: decodeURIComponent(props.options[1])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"Option-row\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              className: \"Options\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"OptionButton\",\n                variant: \"primary\",\n                size: \"lg\",\n                active: !isButtonDisabled,\n                disabled: isButtonDisabled,\n                onClick: checkAnswer.bind(this, decodeURIComponent(props.options[2])),\n                children: decodeURIComponent(props.options[2])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              className: \"Options\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"OptionButton\",\n                variant: \"primary\",\n                size: \"lg\",\n                active: !isButtonDisabled,\n                disabled: isButtonDisabled,\n                onClick: checkAnswer.bind(this, decodeURIComponent(props.options[3])),\n                children: decodeURIComponent(props.options[3])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Result\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              className: \"Grade\",\n              children: /*#__PURE__*/_jsxDEV(Response, {\n                visible: response,\n                response: answerSelected\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              className: \"Enter-button\",\n              children: /*#__PURE__*/_jsxDEV(EnterButton, {\n                visible: response,\n                currentQuestion: props.currentQuestion,\n                setCurrentQuestion: props.setCurrentQuestion,\n                setNoOfCorrectResponses: props.setNoOfCorrectResponses,\n                score: props.score,\n                noOfQuestions: props.noOfQuestions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this);\n      break;\n\n    case 'boolean':\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Multiple-choice\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"Option-row\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              className: \"Options\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"OptionButton\",\n                variant: \"primary\",\n                size: \"lg\",\n                active: !isButtonDisabled,\n                disabled: isButtonDisabled,\n                onClick: checkAnswer.bind(this, decodeURIComponent(props.options[0])),\n                children: decodeURIComponent(props.options[0])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              className: \"Options\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"OptionButton\",\n                variant: \"primary\",\n                size: \"lg\",\n                active: !isButtonDisabled,\n                disabled: isButtonDisabled,\n                onClick: checkAnswer.bind(this, decodeURIComponent(props.options[1])),\n                children: decodeURIComponent(props.options[1])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Result\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              className: \"Grade\",\n              children: /*#__PURE__*/_jsxDEV(Response, {\n                visible: response,\n                response: answerSelected\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              className: \"Enter-button\",\n              children: /*#__PURE__*/_jsxDEV(EnterButton, {\n                visible: response,\n                currentQuestion: props.currentQuestion,\n                setCurrentQuestion: props.setCurrentQuestion,\n                setNoOfCorrectResponses: props.setNoOfCorrectResponses,\n                score: props.score,\n                noOfQuestions: props.noOfQuestions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this);\n      break;\n\n    default:\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this);\n      break;\n  }\n};\n\n_s(AnswerOption, \"hrB/MZBSfBncgyoo0RvBpsEl7m8=\");\n\n_c = AnswerOption;\nexport default AnswerOption;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnswerOption\");","map":{"version":3,"sources":["/home/urja/frontier-techworks-test/src/components/AnswerOption.tsx"],"names":["React","useEffect","useState","Col","Row","Button","questions","Response","EnterButton","AnswerOption","props","answerType","currentQuestion","type","answerSelected","answerChosen","response","responseCaptured","isButtonDisabled","disableButton","checkAnswer","optionChoosen","console","log","options","correct_answer","setNoOfCorrectResponses","noOfCorrectResponses","setNoOfWrongResponses","noOfWrongResponses","bind","decodeURIComponent","setCurrentQuestion","score","noOfQuestions"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useRef} from 'react';\nimport { Col, Row, Button } from 'react-bootstrap';\nimport questions from '../questions.json';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as functions from '../utility/utilityFunctions';\nimport Response from './Response';\nimport '../App.css';\nimport EnterButton from './EnterButton';\n\ninterface AnswerOptionProps {\n    currentQuestion : number;\n    options: string[];\n    setCurrentQuestion: (currentQuestion: number) => void;\n    setNoOfCorrectResponses: (noOfCorrectResponses: number) => void;\n    setNoOfWrongResponses: (noOfWrongResponses: number) => void;\n    score: number;\n    noOfQuestions: number;\n    noOfCorrectResponses: number;\n    noOfWrongResponses: number;\n}\n\nconst AnswerOption : React.FunctionComponent<AnswerOptionProps> = (props: AnswerOptionProps) => {\n    const answerType : string = questions[props.currentQuestion - 1].type;\n    const [answerSelected, answerChosen] = useState(false);\n    const [response, responseCaptured] = useState(false);\n    const [isButtonDisabled, disableButton] = useState(false);\n    const checkAnswer: (optionChoosen: string) => void = (optionChoosen: string) => {\n        console.log(props.options);\n        if(!response) {\n            disableButton(true);\n            if(optionChoosen === questions[props.currentQuestion - 1].correct_answer) {\n                console.log(\"answer true\");\n                answerChosen(true);\n                props.setNoOfCorrectResponses(props.noOfCorrectResponses + 1);\n            }\n            else {\n                console.log(\"answer false\");\n                answerChosen(false);\n                props.setNoOfWrongResponses(props.noOfWrongResponses + 1);\n            }\n            responseCaptured(true);\n        }\n    }\n\n    useEffect(() => {\n        answerChosen(false);\n        responseCaptured(false);\n        disableButton(false);\n    }, [props.currentQuestion]);\n\n    switch (answerType) {\n        case 'multiple' : \n            return (\n                <div className = 'Multiple-choice'>\n                    <div>\n                        <Row className = 'Option-row'>\n                            <Col className = 'Options'>\n                                <Button className = 'OptionButton' variant=\"primary\" size=\"lg\" active = {!isButtonDisabled} disabled = {isButtonDisabled} onClick = {checkAnswer.bind(this,decodeURIComponent(props.options[0]))}>\n                                    {decodeURIComponent(props.options[0])}\n                                </Button>\n                            </Col>\n                            <Col className = 'Options'>\n                                <Button className = 'OptionButton' variant=\"primary\" size=\"lg\" active = {!isButtonDisabled} disabled = {isButtonDisabled} onClick = {checkAnswer.bind(this,decodeURIComponent(props.options[1]))}>\n                                    {decodeURIComponent(props.options[1])}\n                                </Button>\n                            </Col>\n                        </Row>\n                        <Row className = 'Option-row'>\n                            <Col className = 'Options'>\n                                <Button className = 'OptionButton' variant=\"primary\" size=\"lg\" active = {!isButtonDisabled} disabled = {isButtonDisabled} onClick = {checkAnswer.bind(this,decodeURIComponent(props.options[2]))}>\n                                    {decodeURIComponent(props.options[2])}\n                                </Button>\n                            </Col>\n                            <Col className = 'Options'>\n                                <Button className = 'OptionButton' variant=\"primary\" size=\"lg\" active = {!isButtonDisabled} disabled = {isButtonDisabled} onClick = {checkAnswer.bind(this,decodeURIComponent(props.options[3]))}>\n                                    {decodeURIComponent(props.options[3])}\n                                </Button>\n                            </Col>\n                        </Row>\n                    </div>\n                    <div className = 'Result'>\n                        <div>\n                            <Row className = 'Grade'>\n                                <Response visible = {response} response = {answerSelected} />\n                            </Row>\n                        </div>\n                        <div>\n                            <Row className = 'Enter-button'>\n                                <EnterButton visible = {response} currentQuestion = {props.currentQuestion} setCurrentQuestion =  {props.setCurrentQuestion}  setNoOfCorrectResponses = {props.setNoOfCorrectResponses} \n                                    score = {props.score} noOfQuestions = {props.noOfQuestions} />\n                            </Row>\n                        </div>\n                    </div>\n                </div>\n            )\n        break;\n        case 'boolean' :\n            return (\n                <div className = 'Multiple-choice'>\n                    <div>\n                        <Row className = 'Option-row'>\n                            <Col className = 'Options'>\n                                <Button className = 'OptionButton' variant=\"primary\" size=\"lg\" active = {!isButtonDisabled} disabled = {isButtonDisabled} onClick = {checkAnswer.bind(this,decodeURIComponent(props.options[0]))}>\n                                    {decodeURIComponent(props.options[0])}\n                                </Button>\n                            </Col>\n                            <Col className = 'Options'>\n                                <Button className = 'OptionButton' variant=\"primary\" size=\"lg\" active = {!isButtonDisabled} disabled = {isButtonDisabled} onClick = {checkAnswer.bind(this,decodeURIComponent(props.options[1]))}>\n                                    {decodeURIComponent(props.options[1])}\n                                </Button>\n                            </Col>\n                        </Row>\n                    </div>\n                    <div className = 'Result'>\n                        <div>\n                            <Row className = 'Grade'>\n                                <Response visible = {response} response = {answerSelected} />\n                            </Row>\n                        </div>\n                        <div>\n                            <Row className = 'Enter-button'>\n                                <EnterButton visible = {response} currentQuestion = {props.currentQuestion} setCurrentQuestion =  {props.setCurrentQuestion}  setNoOfCorrectResponses = {props.setNoOfCorrectResponses} \n                                    score = {props.score} noOfQuestions = {props.noOfQuestions} />\n                            </Row>\n                        </div>\n                    </div>\n                </div>\n            )\n        break;\n        default : \n            return (\n                <div />\n            )\n        break;\n    }\n}\n\nexport default AnswerOption;\n"]},"metadata":{},"sourceType":"module"}