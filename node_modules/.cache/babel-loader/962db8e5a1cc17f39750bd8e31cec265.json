{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/urja/frontier-techworks-test/src/AnswerOption.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Col, Row, Button } from 'react-bootstrap';\nimport questions from './questions.json';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst AnswerOption = props => {\n  _s();\n\n  const answerType = questions[props.currentQuestion - 1].type;\n  const options = questions[props.currentQuestion - 1].incorrect_answers;\n  useEffect(() => {\n    props.responseRegistered(false);\n  });\n\n  const checkAnswer = (e, optionChoosen) => {\n    props.responseRegistered(true);\n\n    if (optionChoosen == questions[props.currentQuestion - 1].correct_answer) {\n      props.checkResponse(true);\n    } else {\n      props.checkResponse(false);\n    }\n  };\n\n  options.push(questions[props.currentQuestion - 1].correct_answer);\n  shuffleArray(options);\n\n  switch (answerType) {\n    case 'multiple':\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            className: \"Options\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              size: \"lg\",\n              active: true,\n              onClick: checkAnswer.bind(decodeURIComponent(options[0])),\n              children: decodeURIComponent(options[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"Options\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              size: \"lg\",\n              active: true,\n              onClick: checkAnswer.bind(decodeURIComponent(options[1])),\n              children: decodeURIComponent(options[1])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            className: \"Options\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              size: \"lg\",\n              active: true,\n              onClick: checkAnswer.bind(decodeURIComponent(options[2])),\n              children: decodeURIComponent(options[2])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"Options\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              size: \"lg\",\n              active: true,\n              onClick: checkAnswer.bind(decodeURIComponent(options[3])),\n              children: decodeURIComponent(options[3])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this);\n      break;\n\n    case 'boolean':\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            className: \"Options\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              size: \"lg\",\n              active: true,\n              onClick: checkAnswer.bind(decodeURIComponent(options[0])),\n              children: decodeURIComponent(options[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"Options\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              size: \"lg\",\n              active: true,\n              onClick: checkAnswer.bind(decodeURIComponent(options[1])),\n              children: decodeURIComponent(options[1])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this);\n      break;\n\n    default:\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this);\n      break;\n  }\n};\n\n_s(AnswerOption, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = AnswerOption;\nexport default AnswerOption;\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AnswerOption\");","map":{"version":3,"sources":["/home/urja/frontier-techworks-test/src/AnswerOption.tsx"],"names":["React","useEffect","Col","Row","Button","questions","AnswerOption","props","answerType","currentQuestion","type","options","incorrect_answers","responseRegistered","checkAnswer","e","optionChoosen","correct_answer","checkResponse","push","shuffleArray","bind","decodeURIComponent","array","i","length","j","Math","floor","random"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,QAAiC,iBAAjC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAO,sCAAP;;AAQA,MAAMC,YAAyD,GAAIC,KAAD,IAA8B;AAAA;;AAC5F,QAAMC,UAAmB,GAAGH,SAAS,CAACE,KAAK,CAACE,eAAN,GAAwB,CAAzB,CAAT,CAAqCC,IAAjE;AACA,QAAMC,OAAkB,GAAGN,SAAS,CAACE,KAAK,CAACE,eAAN,GAAwB,CAAzB,CAAT,CAAqCG,iBAAhE;AACAX,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAACM,kBAAN,CAAyB,KAAzB;AACH,GAFQ,CAAT;;AAGA,QAAMC,WAA0F,GAAG,CAACC,CAAD,EAA+CC,aAA/C,KAAyE;AACxKT,IAAAA,KAAK,CAACM,kBAAN,CAAyB,IAAzB;;AACA,QAAGG,aAAa,IAAIX,SAAS,CAACE,KAAK,CAACE,eAAN,GAAwB,CAAzB,CAAT,CAAqCQ,cAAzD,EAAyE;AACrEV,MAAAA,KAAK,CAACW,aAAN,CAAoB,IAApB;AACH,KAFD,MAGK;AACDX,MAAAA,KAAK,CAACW,aAAN,CAAoB,KAApB;AACH;AACJ,GARD;;AASAP,EAAAA,OAAO,CAACQ,IAAR,CAAad,SAAS,CAACE,KAAK,CAACE,eAAN,GAAwB,CAAzB,CAAT,CAAqCQ,cAAlD;AACAG,EAAAA,YAAY,CAACT,OAAD,CAAZ;;AACA,UAAQH,UAAR;AACI,SAAK,UAAL;AACI,0BACI;AAAA,gCACI,QAAC,GAAD;AAAA,kCACI,QAAC,GAAD;AAAK,YAAA,SAAS,EAAG,SAAjB;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAA0B,cAAA,IAAI,EAAC,IAA/B;AAAoC,cAAA,MAAM,MAA1C;AAA2C,cAAA,OAAO,EAAIM,WAAW,CAACO,IAAZ,CAAiBC,kBAAkB,CAACX,OAAO,CAAC,CAAD,CAAR,CAAnC,CAAtD;AAAA,wBACKW,kBAAkB,CAACX,OAAO,CAAC,CAAD,CAAR;AADvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI,QAAC,GAAD;AAAK,YAAA,SAAS,EAAG,SAAjB;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAA0B,cAAA,IAAI,EAAC,IAA/B;AAAoC,cAAA,MAAM,MAA1C;AAA2C,cAAA,OAAO,EAAIG,WAAW,CAACO,IAAZ,CAAiBC,kBAAkB,CAACX,OAAO,CAAC,CAAD,CAAR,CAAnC,CAAtD;AAAA,wBACKW,kBAAkB,CAACX,OAAO,CAAC,CAAD,CAAR;AADvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAaI,QAAC,GAAD;AAAA,kCACI,QAAC,GAAD;AAAK,YAAA,SAAS,EAAG,SAAjB;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAA0B,cAAA,IAAI,EAAC,IAA/B;AAAoC,cAAA,MAAM,MAA1C;AAA2C,cAAA,OAAO,EAAIG,WAAW,CAACO,IAAZ,CAAiBC,kBAAkB,CAACX,OAAO,CAAC,CAAD,CAAR,CAAnC,CAAtD;AAAA,wBACKW,kBAAkB,CAACX,OAAO,CAAC,CAAD,CAAR;AADvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI,QAAC,GAAD;AAAK,YAAA,SAAS,EAAG,SAAjB;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAA0B,cAAA,IAAI,EAAC,IAA/B;AAAoC,cAAA,MAAM,MAA1C;AAA2C,cAAA,OAAO,EAAIG,WAAW,CAACO,IAAZ,CAAiBC,kBAAkB,CAACX,OAAO,CAAC,CAAD,CAAR,CAAnC,CAAtD;AAAA,wBACKW,kBAAkB,CAACX,OAAO,CAAC,CAAD,CAAR;AADvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AA4BJ;;AACA,SAAK,SAAL;AACI,0BACI;AAAA,+BACI,QAAC,GAAD;AAAA,kCACI,QAAC,GAAD;AAAK,YAAA,SAAS,EAAG,SAAjB;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAA0B,cAAA,IAAI,EAAC,IAA/B;AAAoC,cAAA,MAAM,MAA1C;AAA2C,cAAA,OAAO,EAAIG,WAAW,CAACO,IAAZ,CAAiBC,kBAAkB,CAACX,OAAO,CAAC,CAAD,CAAR,CAAnC,CAAtD;AAAA,wBACKW,kBAAkB,CAACX,OAAO,CAAC,CAAD,CAAR;AADvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI,QAAC,GAAD;AAAK,YAAA,SAAS,EAAG,SAAjB;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAA0B,cAAA,IAAI,EAAC,IAA/B;AAAoC,cAAA,MAAM,MAA1C;AAA2C,cAAA,OAAO,EAAIG,WAAW,CAACO,IAAZ,CAAiBC,kBAAkB,CAACX,OAAO,CAAC,CAAD,CAAR,CAAnC,CAAtD;AAAA,wBACKW,kBAAkB,CAACX,OAAO,CAAC,CAAD,CAAR;AADvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAgBJ;;AACA;AACI,0BACI;AAAA;AAAA;AAAA;AAAA,cADJ;AAGJ;AArDJ;AAuDH,CAxED;;GAAML,Y;;KAAAA,Y;AA0EN,eAAeA,YAAf;;AAEA,SAASc,YAAT,CAAsBG,KAAtB,EAAuC;AACnC,OAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAe,CAA5B,EAA+BD,CAAC,GAAG,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACvC,UAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AACA,KAACD,KAAK,CAACC,CAAD,CAAN,EAAWD,KAAK,CAACG,CAAD,CAAhB,IAAuB,CAACH,KAAK,CAACG,CAAD,CAAN,EAAWH,KAAK,CAACC,CAAD,CAAhB,CAAvB;AACH;AACJ","sourcesContent":["import React, {useEffect} from 'react';\nimport { Col, Row, Button } from 'react-bootstrap';\nimport questions from './questions.json';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ninterface AnswerOptionProps {\n    currentQuestion : number;\n    checkResponse: (response: boolean) => {};\n    responseRegistered: (entered: boolean) => {}\n}\n\nconst AnswerOption : React.FunctionComponent<AnswerOptionProps> = (props: AnswerOptionProps) => {\n    const answerType : string = questions[props.currentQuestion - 1].type;\n    const options : string[] = questions[props.currentQuestion - 1].incorrect_answers;\n    useEffect(() => {\n        props.responseRegistered(false);\n    });\n    const checkAnswer: (e: React.MouseEvent<HTMLElement, MouseEvent>, optionChoosen: string) => void = (e: React.MouseEvent<HTMLElement, MouseEvent>, optionChoosen: string) => {\n        props.responseRegistered(true);\n        if(optionChoosen == questions[props.currentQuestion - 1].correct_answer) {\n            props.checkResponse(true);\n        }\n        else {\n            props.checkResponse(false);\n        }\n    }\n    options.push(questions[props.currentQuestion - 1].correct_answer);\n    shuffleArray(options);\n    switch (answerType) {\n        case 'multiple' : \n            return (\n                <div>\n                    <Row>\n                        <Col className = 'Options'>\n                            <Button variant=\"primary\" size=\"lg\" active onClick = {checkAnswer.bind(decodeURIComponent(options[0]))}>\n                                {decodeURIComponent(options[0])}\n                            </Button>\n                        </Col>\n                        <Col className = 'Options'>\n                            <Button variant=\"primary\" size=\"lg\" active onClick = {checkAnswer.bind(decodeURIComponent(options[1]))}>\n                                {decodeURIComponent(options[1])}\n                            </Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col className = 'Options'>\n                            <Button variant=\"primary\" size=\"lg\" active onClick = {checkAnswer.bind(decodeURIComponent(options[2]))}>\n                                {decodeURIComponent(options[2])}\n                            </Button>\n                        </Col>\n                        <Col className = 'Options'>\n                            <Button variant=\"primary\" size=\"lg\" active onClick = {checkAnswer.bind(decodeURIComponent(options[3]))}>\n                                {decodeURIComponent(options[3])}\n                            </Button>\n                        </Col>\n                    </Row>\n                </div>\n            )\n        break;\n        case 'boolean' :\n            return (\n                <div>\n                    <Row>\n                        <Col className = 'Options'>\n                            <Button variant=\"primary\" size=\"lg\" active onClick = {checkAnswer.bind(decodeURIComponent(options[0]))}>\n                                {decodeURIComponent(options[0])}\n                            </Button>\n                        </Col>\n                        <Col className = 'Options'>\n                            <Button variant=\"primary\" size=\"lg\" active onClick = {checkAnswer.bind(decodeURIComponent(options[1]))}>\n                                {decodeURIComponent(options[1])}\n                            </Button>\n                        </Col>\n                    </Row>\n                </div>\n            )\n        break;\n        default : \n            return (\n                <div />\n            )\n        break;\n    }\n}\n\nexport default AnswerOption;\n\nfunction shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n}"]},"metadata":{},"sourceType":"module"}