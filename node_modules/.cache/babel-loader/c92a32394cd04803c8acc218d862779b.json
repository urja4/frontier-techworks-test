{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/urja/frontier-techworks-test/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ProgressBar } from 'react-bootstrap';\nimport './App.css';\nimport questions from './questions.json';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AnswerOption from './AnswerOption';\nimport EnterButton from './EnterButton';\n\nconst App = props => {\n  _s();\n\n  const [currentQuestion, setCurrentQuestion] = useState(1);\n  const [noOfCorrectResponses, setNoOfCorrectResponses] = useState(0);\n  let responseSaved = false;\n  let registeredResponse = false;\n\n  const checkResponse = response => {\n    responseSaved = response;\n  };\n\n  const responseRegistered = response => {\n    registeredResponse = response;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n      animated: true,\n      now: printProgress(currentQuestion, props.noOfQuestions)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Quiz\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Number\",\n          children: [\"Question \", currentQuestion, \" of \", props.noOfQuestions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Category\",\n          children: decodeURIComponent(questions[currentQuestion - 1].category)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Difficulty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Question\",\n        children: decodeURIComponent(questions[currentQuestion - 1].question)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Response\",\n        children: /*#__PURE__*/_jsxDEV(AnswerOption, {\n          currentQuestion: currentQuestion,\n          responseRegistered: responseRegistered,\n          checkResponse: checkResponse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Answer\",\n        children: [printAnswer(registeredResponse, responseSaved, noOfCorrectResponses, setNoOfCorrectResponses), \";\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EnterButton, {\n        currentQuestion: currentQuestion,\n        setCurrentQuestion: setCurrentQuestion,\n        score: printScore(noOfCorrectResponses, currentQuestion),\n        noOfQuestions: props.noOfQuestions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Score-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Score\",\n        children: [\"Score: \", printScore(noOfCorrectResponses, currentQuestion), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Max-score\",\n        children: [\"Max Score: \", printMaxScore(noOfCorrectResponses, currentQuestion, props.noOfQuestions), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Bar\",\n        children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n          striped: true,\n          variant: \"success\",\n          now: printMinScore(noOfCorrectResponses, currentQuestion, props.noOfQuestions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          striped: true,\n          variant: \"warning\",\n          now: printScore(noOfCorrectResponses, currentQuestion)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          striped: true,\n          variant: \"danger\",\n          now: printMaxScore(noOfCorrectResponses, currentQuestion, props.noOfQuestions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          striped: true,\n          variant: \"info\",\n          now: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"7wwZ9N1dHHgl+9fYRX5/1I1Qka4=\");\n\n_c = App;\nexport default App;\n\nfunction printProgress(currentQuestion, noOfQuestions) {\n  return currentQuestion / noOfQuestions * 100;\n}\n\nfunction printScore(noOfCorrectResponses, currentQuestion) {\n  return noOfCorrectResponses / currentQuestion * 100;\n}\n\nfunction printMaxScore(noOfCorrectResponses, currentQuestion, noOfQuestions) {\n  return (noOfCorrectResponses + (noOfQuestions - currentQuestion)) / noOfQuestions * 100;\n}\n\nfunction printMinScore(noOfCorrectResponses, currentQuestion, noOfQuestions) {\n  return noOfCorrectResponses / noOfQuestions * 100;\n}\n\nfunction printAnswer(registeredResponse, responseSaved, noOfCorrectResponses, setNoOfCorrectResponses) {\n  if (registeredResponse == false) {\n    return '';\n  } else if (responseSaved) {\n    setNoOfCorrectResponses(noOfCorrectResponses + 1);\n    return 'Correct!';\n  } else {\n    return 'Sorry!';\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/urja/frontier-techworks-test/src/App.tsx"],"names":["React","useState","ProgressBar","questions","AnswerOption","EnterButton","App","props","currentQuestion","setCurrentQuestion","noOfCorrectResponses","setNoOfCorrectResponses","responseSaved","registeredResponse","checkResponse","response","responseRegistered","printProgress","noOfQuestions","decodeURIComponent","category","question","printAnswer","printScore","printMaxScore","printMinScore"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, ProgressBar } from 'react-bootstrap';\nimport './App.css';\nimport questions from './questions.json';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AnswerOption from './AnswerOption';\nimport EnterButton from './EnterButton';\n\ninterface AppProps {\n  noOfQuestions : number\n}\n\nconst App : React.FunctionComponent<AppProps> = (props: AppProps) => {\n  const [currentQuestion, setCurrentQuestion] = useState(1);\n  const [noOfCorrectResponses, setNoOfCorrectResponses] = useState(0);\n  let responseSaved : boolean = false;\n  let registeredResponse: boolean = false;\n  const checkResponse: (response: boolean) => void = (response: boolean) => {\n    responseSaved = response;\n  }\n  const responseRegistered: (response: boolean) => void = (response: boolean) => {\n    registeredResponse = response;\n  }\n  return (\n    <div className = 'App'>\n      <ProgressBar animated now = {printProgress(currentQuestion,props.noOfQuestions)} />\n      <div className = 'Quiz'>\n        <div className = 'Header'>\n          <div className = 'Number'>\n            Question {currentQuestion} of {props.noOfQuestions}\n          </div>\n          <div className = 'Category'>\n            {decodeURIComponent(questions[currentQuestion - 1].category)}\n          </div>\n          <div className = 'Difficulty'>\n          </div>\n        </div>\n        <div className = 'Question'>\n          {decodeURIComponent(questions[currentQuestion - 1].question)}\n        </div>\n        <div className = 'Response'>\n          <AnswerOption currentQuestion = {currentQuestion} responseRegistered = {responseRegistered} checkResponse = {checkResponse} />\n        </div>\n        <div className = 'Answer'>\n          {printAnswer(registeredResponse,responseSaved, noOfCorrectResponses,setNoOfCorrectResponses)};\n        </div>\n        <EnterButton currentQuestion = {currentQuestion} setCurrentQuestion =  {setCurrentQuestion} score = {printScore(noOfCorrectResponses,currentQuestion)} noOfQuestions = {props.noOfQuestions} />\n      </div>\n      <div className = 'Score-bar'>\n        <div className = 'Score'>\n          Score: {printScore(noOfCorrectResponses,currentQuestion)}%\n        </div>\n        <div className = 'Max-score'>\n          Max Score: {printMaxScore(noOfCorrectResponses,currentQuestion,props.noOfQuestions)}%\n        </div>\n        <div className = 'Bar'>\n          <ProgressBar striped variant = 'success' now = {printMinScore(noOfCorrectResponses,currentQuestion,props.noOfQuestions)} />\n          <ProgressBar striped variant = 'warning' now = {printScore(noOfCorrectResponses,currentQuestion)} />\n          <ProgressBar striped variant = 'danger' now = {printMaxScore(noOfCorrectResponses,currentQuestion,props.noOfQuestions)} />\n          <ProgressBar striped variant = 'info' now = {100} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n\nfunction printProgress(currentQuestion: number, noOfQuestions: number) {\n  return (currentQuestion/noOfQuestions) * 100;\n}\n\nfunction printScore(noOfCorrectResponses: number, currentQuestion: number) {\n  return (noOfCorrectResponses/currentQuestion) * 100;\n}\n\nfunction printMaxScore(noOfCorrectResponses: number,currentQuestion: number,noOfQuestions: number) {\n  return ((noOfCorrectResponses+(noOfQuestions-currentQuestion))/noOfQuestions) * 100;\n}\n\nfunction printMinScore(noOfCorrectResponses: number,currentQuestion: number,noOfQuestions: number) {\n  return (noOfCorrectResponses/noOfQuestions) * 100;\n}\n\nfunction printAnswer(registeredResponse: boolean, responseSaved: boolean, noOfCorrectResponses: number, setNoOfCorrectResponses: (noOfCorrectResponses: number) => {}) {\n  if(registeredResponse == false) {\n    return '';\n  }\n  else if(responseSaved) {\n    setNoOfCorrectResponses(noOfCorrectResponses + 1);\n    return 'Correct!';\n  }\n  else {\n    return 'Sorry!';\n  }\n}\n"]},"metadata":{},"sourceType":"module"}