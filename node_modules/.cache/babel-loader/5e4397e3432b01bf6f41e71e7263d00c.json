{"ast":null,"code":"function shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nfunction printProgress(currentQuestion, noOfQuestions) {\n  return currentQuestion / noOfQuestions * 100;\n}\n\nfunction printScore(noOfCorrectResponses, currentQuestion) {\n  return noOfCorrectResponses / currentQuestion * 100;\n}\n\nfunction printMaxScore(noOfCorrectResponses, currentQuestion, noOfQuestions) {\n  return (noOfCorrectResponses + (noOfQuestions - currentQuestion)) / noOfQuestions * 100;\n}\n\nfunction printMinScore(noOfCorrectResponses, currentQuestion, noOfQuestions) {\n  return noOfCorrectResponses / noOfQuestions * 100;\n}","map":{"version":3,"sources":["/home/urja/frontier-techworks-test/src/utilityFunctions.tsx"],"names":["shuffleArray","array","i","length","j","Math","floor","random","printProgress","currentQuestion","noOfQuestions","printScore","noOfCorrectResponses","printMaxScore","printMinScore"],"mappings":"AAEA,SAASA,YAAT,CAAsBC,KAAtB,EAAuC;AACnC,OAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAe,CAA5B,EAA+BD,CAAC,GAAG,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACvC,UAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AACA,KAACD,KAAK,CAACC,CAAD,CAAN,EAAWD,KAAK,CAACG,CAAD,CAAhB,IAAuB,CAACH,KAAK,CAACG,CAAD,CAAN,EAAWH,KAAK,CAACC,CAAD,CAAhB,CAAvB;AACH;AACJ;;AAGD,SAASM,aAAT,CAAuBC,eAAvB,EAAgDC,aAAhD,EAAuE;AACnE,SAAQD,eAAe,GAACC,aAAjB,GAAkC,GAAzC;AACH;;AAED,SAASC,UAAT,CAAoBC,oBAApB,EAAkDH,eAAlD,EAA2E;AACvE,SAAQG,oBAAoB,GAACH,eAAtB,GAAyC,GAAhD;AACH;;AAED,SAASI,aAAT,CAAuBD,oBAAvB,EAAoDH,eAApD,EAA4EC,aAA5E,EAAmG;AAC/F,SAAQ,CAACE,oBAAoB,IAAEF,aAAa,GAACD,eAAhB,CAArB,IAAuDC,aAAxD,GAAyE,GAAhF;AACH;;AAED,SAASI,aAAT,CAAuBF,oBAAvB,EAAoDH,eAApD,EAA4EC,aAA5E,EAAmG;AAC/F,SAAQE,oBAAoB,GAACF,aAAtB,GAAuC,GAA9C;AACH","sourcesContent":["import React from 'react';\n\nfunction shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n}\n\n\nfunction printProgress(currentQuestion: number, noOfQuestions: number) {\n    return (currentQuestion/noOfQuestions) * 100;\n}\n\nfunction printScore(noOfCorrectResponses: number, currentQuestion: number) {\n    return (noOfCorrectResponses/currentQuestion) * 100;\n}\n\nfunction printMaxScore(noOfCorrectResponses: number,currentQuestion: number,noOfQuestions: number) {\n    return ((noOfCorrectResponses+(noOfQuestions-currentQuestion))/noOfQuestions) * 100;\n}\n\nfunction printMinScore(noOfCorrectResponses: number,currentQuestion: number,noOfQuestions: number) {\n    return (noOfCorrectResponses/noOfQuestions) * 100;\n}"]},"metadata":{},"sourceType":"module"}