{"ast":null,"code":"import '../App.css';\nexport function shuffleArray(array) {\n  var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n}\nexport function printProgress(currentQuestion, noOfQuestions) {\n  return currentQuestion / noOfQuestions * 100;\n}\nexport function printScore(noOfCorrectResponses, noOfWrongResponses) {\n  let score = 0;\n\n  if (noOfCorrectResponses | noOfWrongResponses) {\n    score = noOfCorrectResponses / (noOfWrongResponses + noOfCorrectResponses);\n  }\n\n  return score * 100;\n}\nexport function printMaxScore(noOfWrongResponses, noOfQuestions) {\n  return (noOfQuestions - noOfWrongResponses) / noOfQuestions * 100;\n}\nexport function printMinScore(noOfCorrectResponses, noOfQuestions) {\n  return noOfCorrectResponses / noOfQuestions * 100;\n}\nexport function isCorrect(correctAnswer, optionChosen) {\n  console.log(typeof isCorrect);\n\n  if (typeof isCorrect == 'string') {\n    if (correctAnswer == optionChosen) {\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    let correctAnswerLength = correctAnswer.length;\n    let optionChosenLength = optionChosen.length;\n\n    if (correctAnswerLength == optionChosenLength) {\n      for (let i = 0; i < correctAnswerLength; i++) {\n        if (correctAnswer[i] != optionChosen[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n}","map":{"version":3,"sources":["/home/urja/frontier-techworks-test/src/utility/utilityFunctions.tsx"],"names":["shuffleArray","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","printProgress","currentQuestion","noOfQuestions","printScore","noOfCorrectResponses","noOfWrongResponses","score","printMaxScore","printMinScore","isCorrect","correctAnswer","optionChosen","console","log","correctAnswerLength","optionChosenLength","i"],"mappings":"AACA,OAAO,YAAP;AAEA,OAAO,SAASA,YAAT,CAAsBC,KAAtB,EAAuC;AAC1C,MAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;AAAA,MAAiCC,cAAjC;AAAA,MAAiDC,WAAjD;;AAEA,SAAO,MAAMH,YAAb,EAA2B;AAEzBG,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,YAA3B,CAAd;AACAA,IAAAA,YAAY,IAAI,CAAhB;AAEAE,IAAAA,cAAc,GAAGH,KAAK,CAACC,YAAD,CAAtB;AACAD,IAAAA,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACI,WAAD,CAA3B;AACAJ,IAAAA,KAAK,CAACI,WAAD,CAAL,GAAqBD,cAArB;AACD;AACJ;AAED,OAAO,SAASK,aAAT,CAAuBC,eAAvB,EAAgDC,aAAhD,EAAuE;AAC1E,SAAQD,eAAe,GAACC,aAAjB,GAAkC,GAAzC;AACH;AAED,OAAO,SAASC,UAAT,CAAoBC,oBAApB,EAAkDC,kBAAlD,EAA8E;AACjF,MAAIC,KAAK,GAAG,CAAZ;;AACA,MAAGF,oBAAoB,GAAGC,kBAA1B,EAA8C;AAC1CC,IAAAA,KAAK,GAAGF,oBAAoB,IAAEC,kBAAkB,GAAGD,oBAAvB,CAA5B;AACH;;AACD,SAAOE,KAAK,GAAG,GAAf;AACH;AAED,OAAO,SAASC,aAAT,CAAuBF,kBAAvB,EAAmDH,aAAnD,EAA0E;AAC7E,SAAQ,CAACA,aAAa,GAAGG,kBAAjB,IAAqCH,aAAtC,GAAuD,GAA9D;AACH;AAED,OAAO,SAASM,aAAT,CAAuBJ,oBAAvB,EAAqDF,aAArD,EAA4E;AAC/E,SAAQE,oBAAoB,GAACF,aAAtB,GAAuC,GAA9C;AACH;AAED,OAAO,SAASO,SAAT,CAAmBC,aAAnB,EAAqDC,YAArD,EAAsF;AACzFC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOJ,SAAnB;;AACA,MAAI,OAAOA,SAAR,IAAuB,QAA1B,EAAoC;AAChC,QAAGC,aAAa,IAAIC,YAApB,EAAkC;AAC9B,aAAO,IAAP;AACH,KAFD,MAGK;AACD,aAAO,KAAP;AACH;AACJ,GAPD,MAQK;AACD,QAAIG,mBAAmB,GAAGJ,aAAa,CAAChB,MAAxC;AACA,QAAIqB,kBAAkB,GAAGJ,YAAY,CAACjB,MAAtC;;AACA,QAAGoB,mBAAmB,IAAIC,kBAA1B,EAA8C;AAC1C,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAEF,mBAAlB,EAAuCE,CAAC,EAAxC,EAA4C;AACxC,YAAGN,aAAa,CAACM,CAAD,CAAb,IAAoBL,YAAY,CAACK,CAAD,CAAnC,EAAwC;AACpC,iBAAO,KAAP;AACH;AACJ;;AACD,aAAO,IAAP;AACH,KAPD,MAQK;AACD,aAAO,KAAP;AACH;AACJ;AACJ","sourcesContent":["import React from 'react';\nimport '../App.css';\n\nexport function shuffleArray(array: string[]) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n  \n    while (0 !== currentIndex) {\n  \n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n  \n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n}\n\nexport function printProgress(currentQuestion: number, noOfQuestions: number) {\n    return (currentQuestion/noOfQuestions) * 100;\n}\n\nexport function printScore(noOfCorrectResponses: number, noOfWrongResponses: number) {\n    let score = 0;\n    if(noOfCorrectResponses | noOfWrongResponses) {\n        score = noOfCorrectResponses/(noOfWrongResponses + noOfCorrectResponses);\n    }\n    return score * 100;\n}\n\nexport function printMaxScore(noOfWrongResponses: number, noOfQuestions: number) {\n    return ((noOfQuestions - noOfWrongResponses)/noOfQuestions) * 100;\n}\n\nexport function printMinScore(noOfCorrectResponses: number, noOfQuestions: number) {\n    return (noOfCorrectResponses/noOfQuestions) * 100;\n}\n\nexport function isCorrect(correctAnswer: string[] | string, optionChosen: string[] | string) {\n    console.log(typeof(isCorrect));\n    if((typeof(isCorrect)) == 'string') {\n        if(correctAnswer == optionChosen) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        let correctAnswerLength = correctAnswer.length;\n        let optionChosenLength = optionChosen.length;\n        if(correctAnswerLength == optionChosenLength) {\n            for(let i = 0; i< correctAnswerLength; i++) {\n                if(correctAnswer[i] != optionChosen[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}